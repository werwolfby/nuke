{
  "$schema": "https://raw.githubusercontent.com/nuke-build/nuke/master/source/Nuke.CodeGeneration/schema.json",
  "license": [
    "Copyright Matthias Koch, Sebastian Karasek 2018.",
    "Distributed under the MIT License.",
    "https://github.com/nuke-build/tools/blob/master/LICENSE"
  ],
  "references": [
    "https://raw.githubusercontent.com/Microsoft/vswhere/develop/README.md"
  ],
  "name": "VsWhere",
  "officialUrl": "https://github.com/Microsoft/vswhere",
  "help": "VsWhere is designed to be a redistributable, single-file executable that can be used in build or deployment scripts to find where Visual Studio - or other products in the Visual Studio family - is located.",
  "packageId": "vswhere",
  "packageExecutable": "vswhere.exe",
  "tasks": [
    {
      "returnType": "string",
      "customStart": true,
      "settingsClass": {
        "properties": [
          {
            "name": "Latest",
            "type": "bool",
            "format": "-latest",
            "help": " Return only the newest version and last installed."
          },
          {
            "name": "Format",
            "type": "Format",
            "format": "-format {value}",
            "help": "A version range for instances to find. Example: [15.0,16.0) will find versions 15.*."
          },
          {
            "name": "NoLogo",
            "type": "bool",
            "format": "-nologo",
            "help": "Do not show logo information. Some formats of <see cref=\"Nuke.Common.Tools.VsWhere.Format\"/> will not show a logo anyway."
          },
          {
            "name": "UTF8",
            "type": "bool",
            "format": "-utf8",
            "help": "Use UTF-8 encoding (recommended for JSON)."
          },
          {
            "name": "Legacy",
            "type": "bool",
            "format": "-legacy",
            "help": "Also searches Visual Studio 2015 and older products. Information is limited.This option cannot be used with either -products or -requires."
          },
          {
            "name": "All",
            "type": "bool",
            "format": "-all",
            "help": "Finds all instances even if they are incomplete and may not launch."
          },
          {
            "name": "Prerelease",
            "type": "bool",
            "format": "-prerelease",
            "help": "Also searches prereleases. By default, only releases are searched."
          },
          {
            "name": "Products",
            "type": "List<string>",
            "format": "-products {value}",
            "separator": " ",
            "help": "One or more product IDs to find. Defaults to Community, Professional, and Enterprise. Specify <em>*</em> by itself to search all product instances installed."
          },
          {
            "name": "Requires",
            "type": "List<string>",
            "format": "-requires {value}",
            "separator": " ",
            "help": "One or more workload or component IDs required when finding instances. All specified IDs must be installed unless -requiresAny is specified. See <a href=\"https://aka.ms/vs/workloads\"/> for a list of workload and component IDs."
          },
          {
            "name": "RequiresAny",
            "type": "bool",
            "format": "-requiresAny",
            "help": "Find instances with any one or more workload or components IDs passed to -requires."
          },
          {
            "name": "Version",
            "type": "string",
            "format": "-version {value}",
            "help": "A version range for instances to find. Example: [15.0,16.0) will find versions 15.*."
          },
          {
            "name": "Property",
            "type": "string",
            "format": "-property {value}",
            "help": "The name of a property to return. Defaults <see cref=\"Format\"/> to <see cref=\"Nuke.Common.Tools.VsWhere.Format.value\"/>. Use delimiters <em>'.'</em>, <em>'/'</em>, or <em>'_'</em> to separate object and property names. Example: <em>properties.nickname</em> will return the <em>nickname</em> property under <em>properties</em>."
          }
        ]
      }
    }
  ],
  "enumerations": [
    {
      "name": "Format",
      "values": [
        "json",
        "text",
        "value",
        "xml"
      ]
    }
  ]
}